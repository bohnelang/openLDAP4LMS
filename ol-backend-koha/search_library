#!/usr/bin/php -q
<?php

###############################################
# Openeldap KOHA backend in php 
# for searching data in KOHA 
# and sending back to openldap
# 
# Andreas Bohne-Lang, 2020
#
# Copyright by CC0
#


function query_library_system($filter){

        $rval= array();

	if( strlen($filter)<=3) return $rval;

	include("credentialsx.php");
	
	$dbh=mysqli_connect($db_host, $db_login, $db_password, $db_name, $db_port);

	if (!$dbh) {
    		echo "Could not connect to mysql db." . PHP_EOL;
    		echo "Debug: " . mysqli_connect_errno() . PHP_EOL;
    		echo "Debug: " . mysqli_connect_error() . PHP_EOL;
    		exit;
		}

	#echo "Connection established\n";


	$sql= sprintf("SELECT borrowernumber, cardnumber, surname, firstname, email, userid, DATE_FORMAT(debarred,'%%Y-%%m-%%d') as debarred, DATE_FORMAT(dateexpiry,'%%Y-%%m-%%d') as dateexpiry, (SELECT  DATE_FORMAT(expiration,'%%Y-%%m-%%d') FROM  borrower_debarments WHERE borrowers.borrowernumber=borrower_debarments.borrowernumber ORDER BY expiration DESC LIMIT 1) as expiration FROM borrowers  WHERE lower(surname) like '%s%%' OR cardnumber='%s' OR userid='%s' ", $filter,$filter,$filter );

	if(empty($dbh)) die("Connot open $db_tdbs_con");

	#echo "$sql\n";
	$query_result = mysqli_query($dbh,$sql);

	if($query_result) $rval = $query_result-> fetch_all (MYSQLI_ASSOC);  

	mysqli_close($dbh);	

	#print_r( $rval ); 

        return $rval;
}

function parseFilterandgetattr($filter,$attr)
{
# Thunderbird:  filter=(|(cn=mysteri*)(mail=mysteri*)(sn=mysteri*))
#               attr=cn commonname mail objectClass

        if (preg_match('/\('.$attr.'=[^\)]*\)/i', $filter, $matches)) {
                return $matches[0];
        }

        return "";
}


function fetchdatefromlibrarysystem($filter,$basedn="")
{

	$return_records = array();

	####
	#### Here your implement your code that fetch data from library system
	####
	#### In $filter you get the openldap attribute what and where to search 
	#### e.g. cn=Smith or sn=Smith 
	#### 
	#### For beginning ignore the openldap attribute and take the search value only
	####
	#### For experts: You can implement complex searches but you need take care of parsing the filter
	####	if you get a filter like this (&(sn=Smith)(o=Bio*)) you need to implement the parsing and logic :)
	####	Have fun ...
	####
	#### Attention: the submitted filter is in lower case
	####
      	$usersearch  = parseFilterandgetattr($filter,"sn");

        $usersearch=stristr($usersearch,"=");                                         // Find String after first =

        $usersearch=substr($usersearch,1,-1);                                         // Remove ) at end of string

	$usersearch=str_replace("*","",$usersearch);

	# We use wildcards if there are any	

	$returndata = query_library_system($usersearch);

	return $returndata ;
}

function mapandsenddatatoldap($data,$basedn)
{

	####
	#### Here you map the library data to the openldap schema
	#### Only use attributes from official schemas 
	#### See slapd what you include 
	#### Normally this attributes are necessary: 	
	####	core.schema e.g.	: https://github.com/openshift/openldap/blob/master/2.4.41/contrib/config/schema/core.schema
	####	cosine.schema		: https://github.com/openshift/openldap/blob/master/2.4.41/contrib/config/schema/cosine.schema
	####	inetorgperson.schema	: https://github.com/openshift/openldap/blob/master/2.4.41/contrib/config/schema/inetorgperson.schema
        ####    officePerson            : http://www.yolinux.com/TUTORIALS/LinuxTutorialLDAP-GILSchemaExtension.html
        ####    mozillaAddressBookEntry : https://developer.mozilla.org/en-US/docs/Mozilla/Thunderbird/LDAP_Support

	####
	####    eduPerson               : https://github.com/REFEDS/eduperson/blob/master/schema/openldap/eduperson.ldif
	####	dfnEduPerson		: https://download.aai.dfn.de/schema/dfneduperson-1.4.schema.txt	

	####	class person: Must: cn, sn // May: userPassword $ telephoneNumber $ seeAlso $ description	
	#### 	class organizationalPerson: May: title $ x121Address $ registeredAddress $ destinationIndicator $ preferredDeliveryMethod $ telexNumber $ teletexTerminalIdentifier $ telephoneNumber $ internationaliSDNNumber $ facsimileTelephoneNumber $ street $ postOfficeBox $ postalCode $ postalAddress $ physicalDeliveryOfficeName $ ou $ st $ l
	### 	class inetOrgPerson: MAY: audio $ businessCategory $ carLicense $ departmentNumber $ displayName $ employeeNumber $ employeeType $ givenName $ homePhone $ homePostalAddress $ initials $ jpegPhoto $ labeledURI $ mail $ manager $ mobile $ o $ pager $ photo $ roomNumber $ secretary $ uid $ userCertificate $ x500uniqueIdentifier $ preferredLanguage $ userSMIMECertificate $ userPKCS12
	
	### You need to map YOU data to the official ldap attributes:
	### 	E.g.: Your library system sends the attribute 'surname' back. Thus you map 'surname' to openldap attribute 'sn'
	###	'firstname' to 'givenName'
	###	'email1' to 'mail'
	###	'email2' to mail'
	###	'libid' to 'uid' 
	### 	and so on
	###
	###	Keep in mind some openldap schema attributed are *mandatory* !!!  
	###

#borrowernumber, cardnumber, surnname, firstname, email, userid, dateexpiry 
	
	foreach($data as $ind => $val)
	{
		printf("dn: uid=%s,%s\n",$val['borrowernumber'], $basedn);
                printf("objectClass: top\n");
                printf("objectClass: person\n");
                printf("objectClass: organizationalPerson\n");
                printf("objectClass: inetOrgPerson\n");
                printf("objectClass: officePerson\n");
                printf("objectClass: mozillaAddressBookEntry\n");
                printf("objectClass: ndsLoginProperties\n");

                printf("uid: %s\n", $val['borrowernumber']);
                printf("ou: library\n");
                printf("departmentNumber: lms\n");

		# For mail programs 
                printf("cn:: %s\n",base64_encode(sprintf("%s %s %s",isset($val['surname'])?$val['surname']:"",isset($val['firstname'])?$val['firstname']:"", $val['userid'])));
                printf("displayName:: %s\n",base64_encode(sprintf("%s %s %s",isset($val['surname'])?$val['surname']:"",isset($val['firstname'])?$val['firstname']:"", $val['userid'])));
                if( isset($val["surname"])   && ! empty($val["surname"]))   printf("sn:: %s\n",  base64_encode($val['surname'])); else printf("sn: %s\n", $val['userid']);
                if( isset($val["firstname"])    && ! empty($val["firstname"]))  printf("givenName:: %s\n", base64_encode($val['firstname']));
                if( isset($val["email"])     && ! empty($val["email"]))     printf("mail: %s\n", $val["email"]);

		# For IDPs 
 		if( (isset($val["dateexpiry"])  &&  ! empty($val["dateexpiry"])) ||
                        (isset($val["expiration"])  &&  ! empty($val["expiration"]))
                 ){
                        if( (isset($val["debarred"])  &&  strtotime($val["debarred"]) > time() ) || (isset($val["expiration"]) && strtotime($val["expiration"]) <= time())     ){
                                printf("passwordExpirationTime: 20020202200202Z\n");
                        } else {
                                $pet = substr( $val["dateexpiry"],0,4).substr( $val["dateexpiry"],5,2).substr( $val["dateexpiry"],8,2);
                                printf("passwordExpirationTime: %s235959Z\n",$pet);
                        }
                }
                printf("loginGraceRemaining: 0\n");
		
                printf("\n");

	}


}


function main()
{

	$log=false;

	$basedn=$filter="";

/*
These are some parameter coming by STDIN 

SEARCH
msgid: 2
suffix: dc=ldap,dc=lms,dc=library
base: dc=ldap,dc=lms,dc=library
scope: 2
deref: 0
sizelimit: 500
timelimit: 3600
filter: (sn=Mysteri)
attrsonly: 0
*/

	#### This demo use two of this set only.

 	while ($line = fgets(STDIN)) {
                $tt=explode(":",trim($line));
                if(isset( $tt[0] )){
                        $tag =  $tt[0];
                        unset( $tt[0] );
                        $value=implode("",$tt);
                        if( $tag=="base" ) $basedn=trim($value);
                        if( $tag=="filter" ) $filter=trim($value);
                }
        }


	$datafromlibsystem = fetchdatefromlibrarysystem($filter,$basedn);

	mapandsenddatatoldap($datafromlibsystem,$basedn);

	echo "RESULT\n";
	echo "code: 0\n";


	if( $log ) {
		$fp=fopen("/tmp/ol-lib-backend.log","w");
		fputs($fp,sprintf("base=%s filter=%s \n",$basedn,$filter));
		fputs($fp,"----------------------\n");
		fclose($fp);
	} 

}


##########################

/* 
Run a test like this:

./search_library <<_EOF_
SEARCH
msgid: 2
suffix: dc=lms,dc=library
base: dc=lms,dc=library
scope: 2
deref: 0
sizelimit: 500
timelimit: 3600
filter: (&(objectClass=*)(|(cn=Meier*)(mail=Meier*)(sn=Meier*))) 
attrsonly: 0
_EOF_
*/

main();

exit(0);

?>
